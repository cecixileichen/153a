{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport CountChange from \"./CountChange\";\nimport KeyPad from \"./KeyPad\";\nimport ToDoList from \"./ToDoList\";\nimport NoteTaker from \"./NoteTaker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      flexDirection: 'column'\n    },\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-evenly'\n      },\n      children: [_jsx(Button, {\n        title: \"ToDoList\",\n        onPress: function onPress() {\n          return navigation.navigate('ToDoList');\n        }\n      }), _jsx(Button, {\n        title: \"NoteTaker\",\n        onPress: function onPress() {\n          return navigation.navigate('NoteTaker');\n        }\n      })]\n    }), _jsx(View, {\n      style: {\n        alignSelf: 'center',\n        flexDirection: 'row'\n      },\n      children: _jsxs(Text, {\n        style: {\n          fontSize: 20,\n          marginTop: 20\n        },\n        children: [\"\\u3000\\uFF0Fl\\u3001\\xA0\", _jsx(\"br\", {}), \"\\uFF08\\uFF9F\\uFF64 \\u3002 \\uFF17 \", _jsx(\"br\", {}), \"\\xA0\\u3000l\\u3001 ~\\u30FD \", _jsx(\"br\", {}), \"\\u3000\\u3058\\u3057f_, )\\u30CE\", _jsx(\"br\", {})]\n      })\n    })]\n  });\n};\nvar CatFoodButton = function CatFoodButton() {\n  var _useState = useState(5),\n    _useState2 = _slicedToArray(_useState, 2),\n    catFood = _useState2[0],\n    setCatFood = _useState2[1];\n  return _jsxs(View, {\n    style: {\n      alignContent: 'center'\n    },\n    children: [_jsxs(Text, {\n      children: [catFood, \" catfood left.\"]\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        setCatFood(catFood - 1);\n      },\n      disabled: catFood == 0,\n      title: 'Feed Me Mooooooore!!',\n      color: \"#BBBBF0\"\n    })]\n  });\n};\nvar MyStack = function MyStack() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          title: 'Welcome'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"ToDoList\",\n        component: ToDoList\n      }), _jsx(Stack.Screen, {\n        name: \"NoteTaker\",\n        component: NoteTaker\n      })]\n    })\n  });\n};\nexport default MyStack;","map":{"version":3,"names":["React","Button","Text","View","NavigationContainer","createNativeStackNavigator","CountChange","KeyPad","ToDoList","NoteTaker","jsx","_jsx","jsxs","_jsxs","Stack","HomeScreen","_ref","navigation","style","flexDirection","children","justifyContent","title","onPress","navigate","alignSelf","fontSize","marginTop","CatFoodButton","_useState","useState","_useState2","_slicedToArray","catFood","setCatFood","alignContent","disabled","color","MyStack","Navigator","Screen","name","component","options"],"sources":["/Users/iamcccc/Desktop/153a/AwesomeProject/components/StackDemo.js"],"sourcesContent":["import * as React from 'react';\nimport {Button,Text,View} from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport CountChange from './CountChange';\nimport KeyPad from './KeyPad';\nimport ToDoList from './ToDoList';\nimport NoteTaker from './NoteTaker';\n\nconst Stack = createNativeStackNavigator();\n\nconst HomeScreen = ({navigation}) => {\n    return (\n     <View style={{ flexDirection:'column'}}>\n            <View style={{flexDirection: 'row',\n                          justifyContent:'space-evenly'}}>\n              <Button\n                title= \"ToDoList\"\n                onPress = {()=>\n                navigation.navigate('ToDoList')\n                }\n              />\n              <Button\n                title= \"NoteTaker\"\n                onPress = {()=>\n                navigation.navigate('NoteTaker')\n                }\n              />\n            </View>\n            <View style={{alignSelf: 'center',\n                          flexDirection: 'row'}}>\n              <Text style={{fontSize: 20,\n                            marginTop: 20}} >\n                  　／l、 <br/> \n                  （ﾟ､ 。 ７ <br/> \n                   　l、 ~ヽ <br/> \n                  　じしf_, )ノ<br/> \n              </Text>\n            </View>\n      </View>\n    );\n  };\n\nconst CatFoodButton = () => {\n  const [catFood, setCatFood] = useState(5);\n  return (\n    <View style={{alignContent: 'center'}}>\n      <Text>\n        {catFood} catfood left.\n      </Text>\n      <Button\n        onPress={() => {\n          setCatFood(catFood-1);\n        }}\n        disabled={catFood == 0}\n        title={'Feed Me Mooooooore!!'}\n        color='#BBBBF0'\n      />\n     </View>\n  );\n};\n\nconst MyStack = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Home\" component={HomeScreen}\n          options={{title: 'Welcome'}}\n        />\n        <Stack.Screen name=\"ToDoList\" component ={ToDoList} />\n        <Stack.Screen name=\"NoteTaker\" component ={NoteTaker} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default MyStack;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}