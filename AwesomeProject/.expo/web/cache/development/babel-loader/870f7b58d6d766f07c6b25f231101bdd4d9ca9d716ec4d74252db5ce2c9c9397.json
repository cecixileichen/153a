{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar App = function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  return _jsxs(View, {\n    style: styles.centeredView,\n    children: [_jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        Alert.alert('Modal has been closed.');\n        setModalVisible(!modalVisible);\n      },\n      children: _jsx(View, {\n        style: styles.centeredView,\n        children: _jsxs(View, {\n          style: styles.modalView,\n          children: [_jsx(Text, {\n            style: styles.modalText,\n            children: \"Hello World!\"\n          }), _jsx(Pressable, {\n            style: [styles.button, styles.buttonClose],\n            onPress: function onPress() {\n              return setModalVisible(!modalVisible);\n            },\n            children: _jsx(Text, {\n              style: styles.textStyle,\n              children: \"Hide Modal\"\n            })\n          })]\n        })\n      })\n    }), _jsx(Pressable, {\n      style: [styles.button, styles.buttonOpen],\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsx(Text, {\n        style: styles.textStyle,\n        children: \"Show Modal\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: '#F194FF'\n  },\n  buttonClose: {\n    backgroundColor: '#2196F3'\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center'\n  }\n});\nexport default App;","map":{"version":3,"names":["React","useState","Alert","Modal","StyleSheet","Text","Pressable","View","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","style","styles","centeredView","children","animationType","transparent","visible","onRequestClose","alert","modalView","modalText","button","buttonClose","onPress","textStyle","buttonOpen","create","flex","justifyContent","alignItems","marginTop","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","color","fontWeight","textAlign","marginBottom"],"sources":["/Users/iamcccc/Desktop/153a/AwesomeProject/components/AddToDo.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {Alert, Modal, StyleSheet, Text, Pressable, View} from 'react-native';\n\nconst App = () => {\n  const [modalVisible, setModalVisible] = useState(false);\n  return (\n    <View style={styles.centeredView}>\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          Alert.alert('Modal has been closed.');\n          setModalVisible(!modalVisible);\n        }}>\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n            <Text style={styles.modalText}>Hello World!</Text>\n            <Pressable\n              style={[styles.button, styles.buttonClose]}\n              onPress={() => setModalVisible(!modalVisible)}>\n              <Text style={styles.textStyle}>Hide Modal</Text>\n            </Pressable>\n          </View>\n        </View>\n      </Modal>\n      <Pressable\n        style={[styles.button, styles.buttonOpen]}\n        onPress={() => setModalVisible(true)}>\n        <Text style={styles.textStyle}>Show Modal</Text>\n      </Pressable>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22,\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n  },\n  buttonOpen: {\n    backgroundColor: '#F194FF',\n  },\n  buttonClose: {\n    backgroundColor: '#2196F3',\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center',\n  },\n});\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}