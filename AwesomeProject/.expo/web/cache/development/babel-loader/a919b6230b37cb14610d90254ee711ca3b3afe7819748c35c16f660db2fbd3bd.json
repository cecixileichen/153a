{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport CatFoodButton from \"./CatFoodButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(4),\n    _useState2 = _slicedToArray(_useState, 2),\n    catFood = _useState2[0],\n    setCatFood = _useState2[1];\n  var updateCatFood = function updateCatFood(val) {\n    setCatFood(catFood + val);\n  };\n  return _jsxs(View, {\n    style: {\n      flexDirection: 'column'\n    },\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-evenly'\n      },\n      children: [_jsx(Button, {\n        title: \"ToDoList\",\n        onPress: function onPress() {\n          return navigation.navigate('ToDoList');\n        }\n      }), _jsx(Button, {\n        title: \"NoteTaker\",\n        onPress: function onPress() {\n          return navigation.navigate('NoteTaker');\n        }\n      })]\n    }), _jsxs(View, {\n      style: {\n        alignSelf: 'center',\n        flexDirection: 'row',\n        marginTop: 30\n      },\n      children: [_jsxs(View, {\n        style: {\n          fontSize: 20,\n          marginTop: 20\n        },\n        children: [_jsx(Text, {\n          children: \"   \\uFF0Fl\\u3001\"\n        }), _jsx(Text, {\n          children: \"\\uFF08\\uFF9F\\uFF64 \\u3002 \\uFF17\"\n        }), _jsx(Text, {\n          children: \"   l\\u3001 ~\\u30FD\"\n        }), _jsx(Text, {\n          children: \"   \\u3058\\u3057f_, )\\u30CE\"\n        })]\n      }), _jsx(CatFoodButton, {\n        catFood: catFood,\n        updateCatFood: updateCatFood\n      })]\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","Button","Text","View","NavigationContainer","createNativeStackNavigator","CatFoodButton","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","catFood","setCatFood","updateCatFood","val","style","flexDirection","children","justifyContent","title","onPress","navigate","alignSelf","marginTop","fontSize"],"sources":["/Users/iamcccc/Desktop/153a/AwesomeProject/components/HomeScreen.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {Button,Text,View} from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport CatFoodButton from './CatFoodButton';\n\nconst HomeScreen = ({navigation}) => {\n    const [catFood, setCatFood] = useState(4);\n    const updateCatFood = (val) => {\n      setCatFood(catFood + val)\n    }\n\n    return (\n     <View style={{ flexDirection:'column'}}>\n            <View style={{flexDirection: 'row',\n                          justifyContent:'space-evenly'}}>\n              <Button\n                title= \"ToDoList\"\n                onPress = {()=>\n                navigation.navigate('ToDoList')\n                }\n              />\n              <Button\n                title= \"NoteTaker\"\n                onPress = {()=>\n                navigation.navigate('NoteTaker')\n                }\n              />\n            </View>\n            <View style={{alignSelf: 'center',\n                          flexDirection: 'row',\n                          marginTop: 30}}>\n              <View style={{fontSize: 20,\n                            marginTop: 20}} >\n                  <Text>   ／l、</Text>\n                  <Text>（ﾟ､ 。 ７</Text> \n                  <Text>   l、 ~ヽ</Text>\n                  <Text>   じしf_, )ノ</Text>\n              </View>\n              <CatFoodButton catFood={catFood} updateCatFood={updateCatFood}/>\n            </View>\n      </View>\n    );\n  };"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEtC,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAAQC,0BAA0B,QAAO,gCAAgC;AACzE,OAAOC,aAAa;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5C,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAqB;EAAA,IAAhBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC3B,IAAAC,SAAA,GAA8Bd,QAAQ,CAAC,CAAC,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAMI,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,GAAG,EAAK;IAC7BF,UAAU,CAACD,OAAO,GAAGG,GAAG,CAAC;EAC3B,CAAC;EAED,OACCV,KAAA,CAACP,IAAI;IAACkB,KAAK,EAAE;MAAEC,aAAa,EAAC;IAAQ,CAAE;IAAAC,QAAA,GAChCb,KAAA,CAACP,IAAI;MAACkB,KAAK,EAAE;QAACC,aAAa,EAAE,KAAK;QACpBE,cAAc,EAAC;MAAc,CAAE;MAAAD,QAAA,GAC3Cf,IAAA,CAACP,MAAM;QACLwB,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAI,SAAAA,QAAA;UAAA,OACXb,UAAU,CAACc,QAAQ,CAAC,UAAU,CAAC;QAAA;MAC9B,CACF,CAAC,EACFnB,IAAA,CAACP,MAAM;QACLwB,KAAK,EAAE,WAAW;QAClBC,OAAO,EAAI,SAAAA,QAAA;UAAA,OACXb,UAAU,CAACc,QAAQ,CAAC,WAAW,CAAC;QAAA;MAC/B,CACF,CAAC;IAAA,CACE,CAAC,EACPjB,KAAA,CAACP,IAAI;MAACkB,KAAK,EAAE;QAACO,SAAS,EAAE,QAAQ;QACnBN,aAAa,EAAE,KAAK;QACpBO,SAAS,EAAE;MAAE,CAAE;MAAAN,QAAA,GAC3Bb,KAAA,CAACP,IAAI;QAACkB,KAAK,EAAE;UAACS,QAAQ,EAAE,EAAE;UACZD,SAAS,EAAE;QAAE,CAAE;QAAAN,QAAA,GACzBf,IAAA,CAACN,IAAI;UAAAqB,QAAA,EAAC;QAAM,CAAM,CAAC,EACnBf,IAAA,CAACN,IAAI;UAAAqB,QAAA,EAAC;QAAO,CAAM,CAAC,EACpBf,IAAA,CAACN,IAAI;UAAAqB,QAAA,EAAC;QAAQ,CAAM,CAAC,EACrBf,IAAA,CAACN,IAAI;UAAAqB,QAAA,EAAC;QAAW,CAAM,CAAC;MAAA,CACtB,CAAC,EACPf,IAAA,CAACF,aAAa;QAACW,OAAO,EAAEA,OAAQ;QAACE,aAAa,EAAEA;MAAc,CAAC,CAAC;IAAA,CAC5D,CAAC;EAAA,CACP,CAAC;AAEX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}