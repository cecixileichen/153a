{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState, useRef, cloneElement } from \"react\";\nexport default function Countdown(_ref) {\n  var seconds = _ref.seconds;\n  var _useState = useState(seconds),\n    _useState2 = _slicedToArray(_useState, 2),\n    countdown = _useState2[0],\n    setCountdown = _useState2[1];\n  var timerId = useRef();\n  useEffect(function () {\n    timerId.current = setInterval(function () {\n      setCountdown(function (prev) {\n        return prev - 1;\n      });\n    }, 1000);\n    return function () {\n      return clearInterval(timerId.current);\n    };\n  }, []);\n}","map":{"version":3,"names":["useEffect","useState","useRef","cloneElement","Countdown","_ref","seconds","_useState","_useState2","_slicedToArray","countdown","setCountdown","timerId","current","setInterval","prev","clearInterval"],"sources":["/Users/iamcccc/Desktop/153a/AwesomeProject/components/Countdown.js"],"sourcesContent":["import { useEffect, useState, useRef, cloneElement } from \"react\";\n\nexport default function Countdown ({seconds}) {\n    const [countdown, setCountdown] = useState(seconds);\n    const timerId = useRef()\n\n    useEffect(() => {\n        timerId.current = setInterval(() => {\n            setCountdown(prev => prev - 1)\n        }, 1000)\n        return () => clearInterval(timerId.current)\n    }, [])\n\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,YAAY,QAAQ,OAAO;AAEjE,eAAe,SAASC,SAASA,CAAAC,IAAA,EAAa;EAAA,IAAVC,OAAO,GAAAD,IAAA,CAAPC,OAAO;EACvC,IAAAC,SAAA,GAAkCN,QAAQ,CAACK,OAAO,CAAC;IAAAE,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAMI,OAAO,GAAGV,MAAM,CAAC,CAAC;EAExBF,SAAS,CAAC,YAAM;IACZY,OAAO,CAACC,OAAO,GAAGC,WAAW,CAAC,YAAM;MAChCH,YAAY,CAAC,UAAAI,IAAI;QAAA,OAAIA,IAAI,GAAG,CAAC;MAAA,EAAC;IAClC,CAAC,EAAE,IAAI,CAAC;IACR,OAAO;MAAA,OAAMC,aAAa,CAACJ,OAAO,CAACC,OAAO,CAAC;IAAA;EAC/C,CAAC,EAAE,EAAE,CAAC;AAEV"},"metadata":{},"sourceType":"module","externalDependencies":[]}